

================================================================
== Vivado HLS Report for 'pl_axi_dma_controller'
================================================================
* Date:           Tue Mar 24 02:02:44 2015

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        PL_AXI_DMA_Controller
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.75|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |    ?|    ?|         4|          -|          -|     ?|    no    |
        | + Loop 1.2  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 2     |    ?|    ?|         1|          -|          -|     ?|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 32
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	11  / (!localEnabled)
	3  / (localEnabled & !write_assign_load)
	12  / (localEnabled & write_assign_load)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	11  / (localEnabled & !write_assign_load & !p_Val2_2)
12 --> 
	13  / true
13 --> 
	11  / (!tmp_2)
	14  / (tmp_2)
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / (tmp_8)
	19  / (!tmp_8)
17 --> 
	18  / true
18 --> 
	15  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	32  / (!p_Val2_s)
	13  / (p_Val2_s)
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: enabled_read [1/1] 0.00ns
:14  %enabled_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %enabled)

ST_1: write_read [1/1] 0.00ns
:17  %write_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %write_r)

ST_1: startAddress_assign [1/1] 0.00ns
:19  %startAddress_assign = alloca i32, align 4

ST_1: write_assign [1/1] 0.00ns
:20  %write_assign = alloca i1, align 1

ST_1: length_assign [1/1] 0.00ns
:21  %length_assign = alloca i32, align 4

ST_1: iterations_assign [1/1] 0.00ns
:22  %iterations_assign = alloca i32, align 4

ST_1: enabled_assign [1/1] 0.00ns
:23  %enabled_assign = alloca i1, align 1

ST_1: stg_40 [1/1] 0.00ns
:25  store volatile i1 %write_read, i1* %write_assign, align 1

ST_1: stg_41 [1/1] 0.00ns
:28  store volatile i1 %enabled_read, i1* %enabled_assign, align 1


 <State 2>: 8.75ns
ST_2: stg_42 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %AXI_DMA_SLAVE), !map !7

ST_2: stg_43 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 %startAddress), !map !13

ST_2: stg_44 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i1 %write_r), !map !19

ST_2: stg_45 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %length_r), !map !23

ST_2: stg_46 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %iterations), !map !27

ST_2: stg_47 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1 %enabled), !map !31

ST_2: stg_48 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i1* %reset_scanner), !map !35

ST_2: stg_49 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32* %dma_control), !map !39

ST_2: stg_50 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i32* %dma_status), !map !43

ST_2: stg_51 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i32* %dma_address), !map !47

ST_2: stg_52 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i1* %fabric_interrupt_write_finished_V), !map !51

ST_2: stg_53 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %fabric_interrupt_read_finished_V), !map !55

ST_2: stg_54 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i1* %controller_finished_V), !map !59

ST_2: stg_55 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecTopModule([22 x i8]* @str) nounwind

ST_2: iterations_read [1/1] 0.00ns
:15  %iterations_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %iterations)

ST_2: length_read [1/1] 0.00ns
:16  %length_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %length_r)

ST_2: startAddress_read [1/1] 0.00ns
:18  %startAddress_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %startAddress)

ST_2: stg_59 [1/1] 0.00ns
:24  store volatile i32 %startAddress_read, i32* %startAddress_assign, align 4

ST_2: stg_60 [1/1] 0.00ns
:26  store volatile i32 %length_read, i32* %length_assign, align 4

ST_2: stg_61 [1/1] 0.00ns
:27  store volatile i32 %iterations_read, i32* %iterations_assign, align 4

ST_2: stg_62 [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecWire(i1* %controller_finished_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_63 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecWire(i1* %fabric_interrupt_write_finished_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_64 [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecWire(i1* %fabric_interrupt_read_finished_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_65 [1/1] 0.00ns
:32  call void (...)* @_ssdm_op_SpecWire(i1* %reset_scanner, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_66 [1/1] 0.00ns
:33  call void (...)* @_ssdm_op_SpecWire(i32* %dma_address, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_67 [1/1] 0.00ns
:34  call void (...)* @_ssdm_op_SpecWire(i32* %dma_status, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_68 [1/1] 0.00ns
:35  call void (...)* @_ssdm_op_SpecWire(i32* %dma_control, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_69 [1/1] 0.00ns
:36  call void (...)* @_ssdm_op_SpecWire(i1 %enabled, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_70 [1/1] 0.00ns
:37  call void (...)* @_ssdm_op_SpecWire(i32 %iterations, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_71 [1/1] 0.00ns
:38  call void (...)* @_ssdm_op_SpecWire(i32 %length_r, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_72 [1/1] 0.00ns
:39  call void (...)* @_ssdm_op_SpecWire(i32 %startAddress, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_73 [1/1] 0.00ns
:40  call void (...)* @_ssdm_op_SpecWire(i32 0, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_74 [1/1] 0.00ns
:41  call void (...)* @_ssdm_op_SpecWire(i32* %AXI_DMA_SLAVE, [6 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 14, [10 x i8]* @p_str3, [4 x i8]* @p_str4, [1 x i8]* @p_str1) nounwind

ST_2: localEnabled [1/1] 0.00ns
:42  %localEnabled = load volatile i1* %enabled_assign, align 1

ST_2: stg_76 [1/1] 0.00ns
:43  br i1 %localEnabled, label %1, label %._crit_edge

ST_2: write_assign_load [1/1] 0.00ns
:0  %write_assign_load = load volatile i1* %write_assign, align 1

ST_2: stg_78 [1/1] 0.00ns
:1  br i1 %write_assign_load, label %2, label %11

ST_2: AXI_DMA_SLAVE_addr_3 [1/1] 0.00ns
:0  %AXI_DMA_SLAVE_addr_3 = getelementptr inbounds i32* %AXI_DMA_SLAVE, i64 12

ST_2: AXI_DMA_SLAVE_load_req [2/2] 8.75ns
:1  %AXI_DMA_SLAVE_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3, i32 1)

ST_2: stg_81 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %reset_scanner, i1 true)


 <State 3>: 8.75ns
ST_3: AXI_DMA_SLAVE_load_req [1/2] 8.75ns
:1  %AXI_DMA_SLAVE_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3, i32 1)

ST_3: AXI_DMA_SLAVE_addr_3_read [1/1] 8.75ns
:2  %AXI_DMA_SLAVE_addr_3_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr_3)

ST_3: tmp_3 [1/1] 0.00ns
:3  %tmp_3 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %AXI_DMA_SLAVE_addr_3_read, i32 1, i32 31)


 <State 4>: 8.75ns
ST_4: tmp [1/1] 0.00ns
:4  %tmp = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_3, i1 true)

ST_4: AXI_DMA_SLAVE_addr_3_req6 [1/1] 8.75ns
:5  %AXI_DMA_SLAVE_addr_3_req6 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3, i32 1)

ST_4: stg_87 [1/1] 8.75ns
:6  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr_3, i32 %tmp)

ST_4: AXI_DMA_SLAVE_addr_3_resp7 [2/2] 8.75ns
:7  %AXI_DMA_SLAVE_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3)


 <State 5>: 8.75ns
ST_5: AXI_DMA_SLAVE_addr_3_resp7 [1/2] 8.75ns
:7  %AXI_DMA_SLAVE_addr_3_resp7 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3)

ST_5: AXI_DMA_SLAVE_load_1_req [2/2] 8.75ns
:8  %AXI_DMA_SLAVE_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3, i32 1)


 <State 6>: 8.75ns
ST_6: AXI_DMA_SLAVE_load_1_req [1/2] 8.75ns
:8  %AXI_DMA_SLAVE_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3, i32 1)

ST_6: AXI_DMA_SLAVE_addr_3_read_1 [1/1] 8.75ns
:9  %AXI_DMA_SLAVE_addr_3_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr_3)

ST_6: tmp_7 [1/1] 0.00ns
:10  %tmp_7 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %AXI_DMA_SLAVE_addr_3_read_1, i32 13, i32 31)

ST_6: tmp_4 [1/1] 0.00ns
:11  %tmp_4 = trunc i32 %AXI_DMA_SLAVE_addr_3_read_1 to i12


 <State 7>: 8.75ns
ST_7: tmp_1 [1/1] 0.00ns
:12  %tmp_1 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i1.i12(i19 %tmp_7, i1 true, i12 %tmp_4)

ST_7: AXI_DMA_SLAVE_addr_3_req [1/1] 8.75ns
:13  %AXI_DMA_SLAVE_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3, i32 1)

ST_7: stg_97 [1/1] 8.75ns
:14  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr_3, i32 %tmp_1)

ST_7: AXI_DMA_SLAVE_addr_3_resp [2/2] 8.75ns
:15  %AXI_DMA_SLAVE_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3)


 <State 8>: 8.75ns
ST_8: AXI_DMA_SLAVE_addr_3_resp [1/2] 8.75ns
:15  %AXI_DMA_SLAVE_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_3)

ST_8: startAddress_assign_load [1/1] 0.00ns
:16  %startAddress_assign_load = load volatile i32* %startAddress_assign, align 4

ST_8: AXI_DMA_SLAVE_addr_4 [1/1] 0.00ns
:17  %AXI_DMA_SLAVE_addr_4 = getelementptr inbounds i32* %AXI_DMA_SLAVE, i64 18

ST_8: AXI_DMA_SLAVE_addr_4_req [1/1] 8.75ns
:18  %AXI_DMA_SLAVE_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_4, i32 1)

ST_8: stg_103 [1/1] 8.75ns
:19  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr_4, i32 %startAddress_assign_load)

ST_8: AXI_DMA_SLAVE_addr_4_resp [2/2] 8.75ns
:20  %AXI_DMA_SLAVE_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_4)


 <State 9>: 8.75ns
ST_9: AXI_DMA_SLAVE_addr_4_resp [1/2] 8.75ns
:20  %AXI_DMA_SLAVE_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_4)

ST_9: length_assign_load [1/1] 0.00ns
:21  %length_assign_load = load volatile i32* %length_assign, align 4

ST_9: AXI_DMA_SLAVE_addr_5 [1/1] 0.00ns
:22  %AXI_DMA_SLAVE_addr_5 = getelementptr inbounds i32* %AXI_DMA_SLAVE, i64 22

ST_9: AXI_DMA_SLAVE_addr_5_req [1/1] 8.75ns
:23  %AXI_DMA_SLAVE_addr_5_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_5, i32 1)

ST_9: stg_109 [1/1] 8.75ns
:24  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr_5, i32 %length_assign_load)

ST_9: AXI_DMA_SLAVE_addr_5_resp [2/2] 8.75ns
:25  %AXI_DMA_SLAVE_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_5)


 <State 10>: 8.75ns
ST_10: AXI_DMA_SLAVE_addr_5_resp [1/2] 8.75ns
:25  %AXI_DMA_SLAVE_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_5)

ST_10: local_V [1/1] 0.00ns
:26  %local_V = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %fabric_interrupt_write_finished_V)

ST_10: stg_113 [1/1] 1.30ns
:27  br label %12


 <State 11>: 0.00ns
ST_11: p_Val2_2 [1/1] 0.00ns
:0  %p_Val2_2 = phi i1 [ %local_V, %11 ], [ %local_V_1, %13 ]

ST_11: stg_115 [1/1] 0.00ns
:1  br i1 %p_Val2_2, label %14, label %13

ST_11: local_V_1 [1/1] 0.00ns
:0  %local_V_1 = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %fabric_interrupt_write_finished_V)

ST_11: stg_117 [1/1] 0.00ns
:1  br label %12

ST_11: stg_118 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %controller_finished_V, i1 true)

ST_11: stg_119 [1/1] 0.00ns
:1  br label %.loopexit

ST_11: stg_120 [1/1] 0.00ns
.loopexit:0  br label %._crit_edge

ST_11: stg_121 [1/1] 0.00ns
._crit_edge:0  ret void


 <State 12>: 1.57ns
ST_12: localAddress [1/1] 0.00ns
:0  %localAddress = load volatile i32* %startAddress_assign, align 4

ST_12: stg_123 [1/1] 0.00ns
:2  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %reset_scanner, i1 false)

ST_12: AXI_DMA_SLAVE_addr [1/1] 0.00ns
:3  %AXI_DMA_SLAVE_addr = getelementptr inbounds i32* %AXI_DMA_SLAVE, i64 1

ST_12: AXI_DMA_SLAVE_addr_1 [1/1] 0.00ns
:4  %AXI_DMA_SLAVE_addr_1 = getelementptr inbounds i32* %AXI_DMA_SLAVE, i64 6

ST_12: AXI_DMA_SLAVE_addr_2 [1/1] 0.00ns
:5  %AXI_DMA_SLAVE_addr_2 = getelementptr inbounds i32* %AXI_DMA_SLAVE, i64 10

ST_12: stg_127 [1/1] 1.57ns
:6  br label %3


 <State 13>: 8.75ns
ST_13: i [1/1] 0.00ns
:0  %i = phi i32 [ 0, %2 ], [ %i_1, %10 ]

ST_13: localAddress1 [1/1] 0.00ns
:1  %localAddress1 = phi i32 [ %localAddress, %2 ], [ %localAddress_1, %10 ]

ST_13: iterations_assign_load [1/1] 0.00ns
:2  %iterations_assign_load = load volatile i32* %iterations_assign, align 4

ST_13: tmp_2 [1/1] 2.52ns
:3  %tmp_2 = icmp slt i32 %i, %iterations_assign_load

ST_13: i_1 [1/1] 2.44ns
:4  %i_1 = add nsw i32 %i, 1

ST_13: stg_133 [1/1] 0.00ns
:5  br i1 %tmp_2, label %4, label %.loopexit

ST_13: AXI_DMA_SLAVE_req12 [1/1] 8.75ns
:1  %AXI_DMA_SLAVE_req12 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_13: stg_135 [1/1] 8.75ns
:2  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE, i32 4)

ST_13: AXI_DMA_SLAVE_resp13 [2/2] 8.75ns
:3  %AXI_DMA_SLAVE_resp13 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE)


 <State 14>: 8.75ns
ST_14: stg_137 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %controller_finished_V, i1 false)

ST_14: AXI_DMA_SLAVE_resp13 [1/2] 8.75ns
:3  %AXI_DMA_SLAVE_resp13 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE)

ST_14: stg_139 [1/1] 0.00ns
:4  br label %5


 <State 15>: 8.75ns
ST_15: AXI_DMA_SLAVE_load_2_req [2/2] 8.75ns
:0  %AXI_DMA_SLAVE_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)


 <State 16>: 8.75ns
ST_16: AXI_DMA_SLAVE_load_2_req [1/2] 8.75ns
:0  %AXI_DMA_SLAVE_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_16: AXI_DMA_SLAVE_read [1/1] 8.75ns
:1  %AXI_DMA_SLAVE_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE)

ST_16: tmp_8 [1/1] 0.00ns
:2  %tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %AXI_DMA_SLAVE_read, i32 2)

ST_16: stg_144 [1/1] 0.00ns
:3  br i1 %tmp_8, label %6, label %7

ST_16: AXI_DMA_SLAVE_load_3_req [2/2] 8.75ns
:0  %AXI_DMA_SLAVE_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)


 <State 17>: 8.75ns
ST_17: AXI_DMA_SLAVE_req10 [1/1] 8.75ns
:0  %AXI_DMA_SLAVE_req10 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_17: stg_147 [1/1] 8.75ns
:1  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE, i32 0)

ST_17: AXI_DMA_SLAVE_resp11 [2/2] 8.75ns
:2  %AXI_DMA_SLAVE_resp11 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE)


 <State 18>: 8.75ns
ST_18: AXI_DMA_SLAVE_resp11 [1/2] 8.75ns
:2  %AXI_DMA_SLAVE_resp11 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE)

ST_18: stg_150 [1/1] 0.00ns
:3  br label %5


 <State 19>: 8.75ns
ST_19: AXI_DMA_SLAVE_load_3_req [1/2] 8.75ns
:0  %AXI_DMA_SLAVE_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_19: AXI_DMA_SLAVE_read_1 [1/1] 8.75ns
:1  %AXI_DMA_SLAVE_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE)

ST_19: tmp_9 [1/1] 0.00ns
:2  %tmp_9 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %AXI_DMA_SLAVE_read_1, i32 1, i32 31)


 <State 20>: 8.75ns
ST_20: tmp_5 [1/1] 0.00ns
:3  %tmp_5 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_9, i1 true)

ST_20: AXI_DMA_SLAVE_req8 [1/1] 8.75ns
:4  %AXI_DMA_SLAVE_req8 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_20: stg_156 [1/1] 8.75ns
:5  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE, i32 %tmp_5)

ST_20: AXI_DMA_SLAVE_resp9 [2/2] 8.75ns
:6  %AXI_DMA_SLAVE_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE)


 <State 21>: 8.75ns
ST_21: AXI_DMA_SLAVE_resp9 [1/2] 8.75ns
:6  %AXI_DMA_SLAVE_resp9 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE)

ST_21: AXI_DMA_SLAVE_load_4_req [2/2] 8.75ns
:7  %AXI_DMA_SLAVE_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)


 <State 22>: 8.75ns
ST_22: AXI_DMA_SLAVE_load_4_req [1/2] 8.75ns
:7  %AXI_DMA_SLAVE_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_22: AXI_DMA_SLAVE_read_2 [1/1] 8.75ns
:8  %AXI_DMA_SLAVE_read_2 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE)

ST_22: tmp_s [1/1] 0.00ns
:9  %tmp_s = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %AXI_DMA_SLAVE_read_2, i32 13, i32 31)

ST_22: tmp_10 [1/1] 0.00ns
:10  %tmp_10 = trunc i32 %AXI_DMA_SLAVE_read_2 to i12


 <State 23>: 8.75ns
ST_23: tmp_6 [1/1] 0.00ns
:11  %tmp_6 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i1.i12(i19 %tmp_s, i1 true, i12 %tmp_10)

ST_23: AXI_DMA_SLAVE_req [1/1] 8.75ns
:12  %AXI_DMA_SLAVE_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_23: stg_166 [1/1] 8.75ns
:13  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE, i32 %tmp_6)

ST_23: AXI_DMA_SLAVE_resp [2/2] 8.75ns
:14  %AXI_DMA_SLAVE_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE)


 <State 24>: 8.75ns
ST_24: AXI_DMA_SLAVE_resp [1/2] 8.75ns
:14  %AXI_DMA_SLAVE_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE)

ST_24: AXI_DMA_SLAVE_load_5_req [2/2] 8.75ns
:15  %AXI_DMA_SLAVE_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_24: AXI_DMA_SLAVE_addr_1_req [1/1] 8.75ns
:21  %AXI_DMA_SLAVE_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_1, i32 1)

ST_24: stg_171 [1/1] 8.75ns
:22  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr_1, i32 %localAddress1)

ST_24: stg_172 [1/1] 0.00ns
:24  call void @_ssdm_op_Write.ap_none.volatile.i32P(i32* %dma_address, i32 %localAddress1)

ST_24: localAddress_1 [1/1] 2.44ns
:35  %localAddress_1 = add i32 %localAddress1, 4


 <State 25>: 8.75ns
ST_25: AXI_DMA_SLAVE_load_5_req [1/2] 8.75ns
:15  %AXI_DMA_SLAVE_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_25: AXI_DMA_SLAVE_load_6_req [2/2] 8.75ns
:18  %AXI_DMA_SLAVE_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr, i32 1)


 <State 26>: 8.75ns
ST_26: AXI_DMA_SLAVE_load_6_req [1/2] 8.75ns
:18  %AXI_DMA_SLAVE_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr, i32 1)


 <State 27>: 8.75ns
ST_27: AXI_DMA_SLAVE_addr_1_resp [2/2] 8.75ns
:23  %AXI_DMA_SLAVE_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_1)


 <State 28>: 8.75ns
ST_28: AXI_DMA_SLAVE_read_3 [1/1] 8.75ns
:16  %AXI_DMA_SLAVE_read_3 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE)

ST_28: stg_179 [1/1] 0.00ns
:17  call void @_ssdm_op_Write.ap_none.volatile.i32P(i32* %dma_control, i32 %AXI_DMA_SLAVE_read_3)

ST_28: AXI_DMA_SLAVE_addr_1_resp [1/2] 8.75ns
:23  %AXI_DMA_SLAVE_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_1)

ST_28: length_assign_load_1 [1/1] 0.00ns
:25  %length_assign_load_1 = load volatile i32* %length_assign, align 4

ST_28: AXI_DMA_SLAVE_addr_2_req [1/1] 8.75ns
:26  %AXI_DMA_SLAVE_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_2, i32 1)

ST_28: stg_183 [1/1] 8.75ns
:27  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr_2, i32 %length_assign_load_1)

ST_28: AXI_DMA_SLAVE_addr_2_resp [2/2] 8.75ns
:28  %AXI_DMA_SLAVE_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_2)


 <State 29>: 8.75ns
ST_29: AXI_DMA_SLAVE_addr_read [1/1] 8.75ns
:19  %AXI_DMA_SLAVE_addr_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr)

ST_29: stg_186 [1/1] 0.00ns
:20  call void @_ssdm_op_Write.ap_none.volatile.i32P(i32* %dma_status, i32 %AXI_DMA_SLAVE_addr_read)

ST_29: AXI_DMA_SLAVE_addr_2_resp [1/2] 8.75ns
:28  %AXI_DMA_SLAVE_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr_2)

ST_29: AXI_DMA_SLAVE_load_7_req [2/2] 8.75ns
:29  %AXI_DMA_SLAVE_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)


 <State 30>: 8.75ns
ST_30: AXI_DMA_SLAVE_load_7_req [1/2] 8.75ns
:29  %AXI_DMA_SLAVE_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE, i32 1)

ST_30: AXI_DMA_SLAVE_read_4 [1/1] 8.75ns
:30  %AXI_DMA_SLAVE_read_4 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE)

ST_30: stg_191 [1/1] 0.00ns
:31  call void @_ssdm_op_Write.ap_none.volatile.i32P(i32* %dma_control, i32 %AXI_DMA_SLAVE_read_4)

ST_30: AXI_DMA_SLAVE_load_8_req [2/2] 8.75ns
:32  %AXI_DMA_SLAVE_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr, i32 1)


 <State 31>: 8.75ns
ST_31: AXI_DMA_SLAVE_load_8_req [1/2] 8.75ns
:32  %AXI_DMA_SLAVE_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %AXI_DMA_SLAVE_addr, i32 1)

ST_31: AXI_DMA_SLAVE_addr_read_1 [1/1] 8.75ns
:33  %AXI_DMA_SLAVE_addr_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %AXI_DMA_SLAVE_addr)

ST_31: stg_195 [1/1] 0.00ns
:34  call void @_ssdm_op_Write.ap_none.volatile.i32P(i32* %dma_status, i32 %AXI_DMA_SLAVE_addr_read_1)

ST_31: local_V_2 [1/1] 0.00ns
:36  %local_V_2 = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %fabric_interrupt_read_finished_V)

ST_31: stg_197 [1/1] 1.30ns
:37  br label %8


 <State 32>: 0.00ns
ST_32: p_Val2_s [1/1] 0.00ns
:0  %p_Val2_s = phi i1 [ %local_V_2, %7 ], [ %local_V_3, %9 ]

ST_32: stg_199 [1/1] 0.00ns
:1  br i1 %p_Val2_s, label %10, label %9

ST_32: local_V_3 [1/1] 0.00ns
:0  %local_V_3 = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %fabric_interrupt_read_finished_V)

ST_32: stg_201 [1/1] 0.00ns
:1  br label %8

ST_32: stg_202 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %controller_finished_V, i1 true)

ST_32: stg_203 [1/1] 0.00ns
:1  br label %3



============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is clock enabled: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ AXI_DMA_SLAVE]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; mode=0x330e690; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ startAddress]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x32f4610; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ write_r]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x32df580; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ length_r]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x32bdab0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ iterations]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x32bdc50; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ enabled]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x35eb4a0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ reset_scanner]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; mode=0x35ebee0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ dma_control]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; mode=0x358e140; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ dma_status]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; mode=0x359e3a0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ dma_address]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; mode=0x359d960; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ fabric_interrupt_write_finished_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x3309630; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ fabric_interrupt_read_finished_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; mode=0x35d0700; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ controller_finished_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; mode=0x30e27c0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
enabled_read                (read          ) [ 000000000000000000000000000000000]
write_read                  (read          ) [ 000000000000000000000000000000000]
startAddress_assign         (alloca        ) [ 001111111000100000000000000000000]
write_assign                (alloca        ) [ 011000000000000000000000000000000]
length_assign               (alloca        ) [ 001111111100111111111111111111111]
iterations_assign           (alloca        ) [ 001000000000111111111111111111111]
enabled_assign              (alloca        ) [ 011000000000000000000000000000000]
stg_40                      (store         ) [ 000000000000000000000000000000000]
stg_41                      (store         ) [ 000000000000000000000000000000000]
stg_42                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_43                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_44                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_45                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_46                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_47                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_48                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_49                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_50                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_51                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_52                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_53                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_54                      (specbitsmap   ) [ 000000000000000000000000000000000]
stg_55                      (spectopmodule ) [ 000000000000000000000000000000000]
iterations_read             (read          ) [ 000000000000000000000000000000000]
length_read                 (read          ) [ 000000000000000000000000000000000]
startAddress_read           (read          ) [ 000000000000000000000000000000000]
stg_59                      (store         ) [ 000000000000000000000000000000000]
stg_60                      (store         ) [ 000000000000000000000000000000000]
stg_61                      (store         ) [ 000000000000000000000000000000000]
stg_62                      (specwire      ) [ 000000000000000000000000000000000]
stg_63                      (specwire      ) [ 000000000000000000000000000000000]
stg_64                      (specwire      ) [ 000000000000000000000000000000000]
stg_65                      (specwire      ) [ 000000000000000000000000000000000]
stg_66                      (specwire      ) [ 000000000000000000000000000000000]
stg_67                      (specwire      ) [ 000000000000000000000000000000000]
stg_68                      (specwire      ) [ 000000000000000000000000000000000]
stg_69                      (specwire      ) [ 000000000000000000000000000000000]
stg_70                      (specwire      ) [ 000000000000000000000000000000000]
stg_71                      (specwire      ) [ 000000000000000000000000000000000]
stg_72                      (specwire      ) [ 000000000000000000000000000000000]
stg_73                      (specwire      ) [ 000000000000000000000000000000000]
stg_74                      (specwire      ) [ 000000000000000000000000000000000]
localEnabled                (load          ) [ 001111111111111111111111111111111]
stg_76                      (br            ) [ 000000000000000000000000000000000]
write_assign_load           (load          ) [ 001111111111111111111111111111111]
stg_78                      (br            ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_3        (getelementptr ) [ 000111111000000000000000000000000]
stg_81                      (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_load_req      (readreq       ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_3_read   (read          ) [ 000000000000000000000000000000000]
tmp_3                       (partselect    ) [ 000010000000000000000000000000000]
tmp                         (bitconcatenate) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_3_req6   (writereq      ) [ 000000000000000000000000000000000]
stg_87                      (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_3_resp7  (writeresp     ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_load_1_req    (readreq       ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_3_read_1 (read          ) [ 000000000000000000000000000000000]
tmp_7                       (partselect    ) [ 000000010000000000000000000000000]
tmp_4                       (trunc         ) [ 000000010000000000000000000000000]
tmp_1                       (bitconcatenate) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_3_req    (writereq      ) [ 000000000000000000000000000000000]
stg_97                      (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_3_resp   (writeresp     ) [ 000000000000000000000000000000000]
startAddress_assign_load    (load          ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_4        (getelementptr ) [ 000000000100000000000000000000000]
AXI_DMA_SLAVE_addr_4_req    (writereq      ) [ 000000000000000000000000000000000]
stg_103                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_4_resp   (writeresp     ) [ 000000000000000000000000000000000]
length_assign_load          (load          ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_5        (getelementptr ) [ 000000000010000000000000000000000]
AXI_DMA_SLAVE_addr_5_req    (writereq      ) [ 000000000000000000000000000000000]
stg_109                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_5_resp   (writeresp     ) [ 000000000000000000000000000000000]
local_V                     (read          ) [ 000000000011000000000000000000000]
stg_113                     (br            ) [ 000000000011000000000000000000000]
p_Val2_2                    (phi           ) [ 000000000001000000000000000000000]
stg_115                     (br            ) [ 000000000000000000000000000000000]
local_V_1                   (read          ) [ 000000000011000000000000000000000]
stg_117                     (br            ) [ 000000000011000000000000000000000]
stg_118                     (write         ) [ 000000000000000000000000000000000]
stg_119                     (br            ) [ 000000000000000000000000000000000]
stg_120                     (br            ) [ 000000000000000000000000000000000]
stg_121                     (ret           ) [ 000000000000000000000000000000000]
localAddress                (load          ) [ 000000000000111111111111111111111]
stg_123                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr          (getelementptr ) [ 000000000000011111111111111111111]
AXI_DMA_SLAVE_addr_1        (getelementptr ) [ 000000000000011111111111111111111]
AXI_DMA_SLAVE_addr_2        (getelementptr ) [ 000000000000011111111111111111111]
stg_127                     (br            ) [ 000000000000111111111111111111111]
i                           (phi           ) [ 000000000000010000000000000000000]
localAddress1               (phi           ) [ 000000000000011111111111100000000]
iterations_assign_load      (load          ) [ 000000000000000000000000000000000]
tmp_2                       (icmp          ) [ 000000000001011111111111111111111]
i_1                         (add           ) [ 000000000000111111111111111111111]
stg_133                     (br            ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_req12         (writereq      ) [ 000000000000000000000000000000000]
stg_135                     (write         ) [ 000000000000000000000000000000000]
stg_137                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_resp13        (writeresp     ) [ 000000000000000000000000000000000]
stg_139                     (br            ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_load_2_req    (readreq       ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_read          (read          ) [ 000000000000000000000000000000000]
tmp_8                       (bitselect     ) [ 000000000000011111111111111111111]
stg_144                     (br            ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_req10         (writereq      ) [ 000000000000000000000000000000000]
stg_147                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_resp11        (writeresp     ) [ 000000000000000000000000000000000]
stg_150                     (br            ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_load_3_req    (readreq       ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_read_1        (read          ) [ 000000000000000000000000000000000]
tmp_9                       (partselect    ) [ 000000000000000000001000000000000]
tmp_5                       (bitconcatenate) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_req8          (writereq      ) [ 000000000000000000000000000000000]
stg_156                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_resp9         (writeresp     ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_load_4_req    (readreq       ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_read_2        (read          ) [ 000000000000000000000000000000000]
tmp_s                       (partselect    ) [ 000000000000000000000001000000000]
tmp_10                      (trunc         ) [ 000000000000000000000001000000000]
tmp_6                       (bitconcatenate) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_req           (writereq      ) [ 000000000000000000000000000000000]
stg_166                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_resp          (writeresp     ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_1_req    (writereq      ) [ 000000000000000000000000000000000]
stg_171                     (write         ) [ 000000000000000000000000000000000]
stg_172                     (write         ) [ 000000000000000000000000000000000]
localAddress_1              (add           ) [ 000000000000110000000000011111111]
AXI_DMA_SLAVE_load_5_req    (readreq       ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_load_6_req    (readreq       ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_read_3        (read          ) [ 000000000000000000000000000000000]
stg_179                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_1_resp   (writeresp     ) [ 000000000000000000000000000000000]
length_assign_load_1        (load          ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_2_req    (writereq      ) [ 000000000000000000000000000000000]
stg_183                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_read     (read          ) [ 000000000000000000000000000000000]
stg_186                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_2_resp   (writeresp     ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_load_7_req    (readreq       ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_read_4        (read          ) [ 000000000000000000000000000000000]
stg_191                     (write         ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_load_8_req    (readreq       ) [ 000000000000000000000000000000000]
AXI_DMA_SLAVE_addr_read_1   (read          ) [ 000000000000000000000000000000000]
stg_195                     (write         ) [ 000000000000000000000000000000000]
local_V_2                   (read          ) [ 000000000000011111111111111111111]
stg_197                     (br            ) [ 000000000000011111111111111111111]
p_Val2_s                    (phi           ) [ 000000000000011111111111111111111]
stg_199                     (br            ) [ 000000000000000000000000000000000]
local_V_3                   (read          ) [ 000000000000011111111111111111111]
stg_201                     (br            ) [ 000000000000011111111111111111111]
stg_202                     (write         ) [ 000000000000000000000000000000000]
stg_203                     (br            ) [ 000000000000111111111111111111111]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="AXI_DMA_SLAVE">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="AXI_DMA_SLAVE"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="startAddress">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="startAddress"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="write_r">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="write_r"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="length_r">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="length_r"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="iterations">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="iterations"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="enabled">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="enabled"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="reset_scanner">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="reset_scanner"/></StgValue>
</bind>
</comp>

<comp id="14" class="1000" name="dma_control">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="dma_control"/></StgValue>
</bind>
</comp>

<comp id="16" class="1000" name="dma_status">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="dma_status"/></StgValue>
</bind>
</comp>

<comp id="18" class="1000" name="dma_address">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="dma_address"/></StgValue>
</bind>
</comp>

<comp id="20" class="1000" name="fabric_interrupt_write_finished_V">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="fabric_interrupt_write_finished_V"/></StgValue>
</bind>
</comp>

<comp id="22" class="1000" name="fabric_interrupt_read_finished_V">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="fabric_interrupt_read_finished_V"/></StgValue>
</bind>
</comp>

<comp id="24" class="1000" name="controller_finished_V">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="controller_finished_V"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_none.i1"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i1"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="str"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_none.i32"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecWire"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_none.volatile.i1P"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i31.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i32.i31.i1"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i19.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="82" class="1001" name="const_82">
<pin_list>
<pin id="83" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="84" class="1001" name="const_84">
<pin_list>
<pin id="85" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i32.i19.i1.i12"/></StgValue>
</bind>
</comp>

<comp id="86" class="1001" name="const_86">
<pin_list>
<pin id="87" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="88" class="1001" name="const_88">
<pin_list>
<pin id="89" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="90" class="1001" name="const_90">
<pin_list>
<pin id="91" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_none.volatile.i1P"/></StgValue>
</bind>
</comp>

<comp id="92" class="1001" name="const_92">
<pin_list>
<pin id="93" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="94" class="1001" name="const_94">
<pin_list>
<pin id="95" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="96" class="1001" name="const_96">
<pin_list>
<pin id="97" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="98" class="1001" name="const_98">
<pin_list>
<pin id="99" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="100" class="1001" name="const_100">
<pin_list>
<pin id="101" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="102" class="1001" name="const_102">
<pin_list>
<pin id="103" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="104" class="1001" name="const_104">
<pin_list>
<pin id="105" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_none.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="106" class="1004" name="startAddress_assign_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="1" slack="0"/>
<pin id="108" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="startAddress_assign/1 "/>
</bind>
</comp>

<comp id="110" class="1004" name="write_assign_fu_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="1" slack="0"/>
<pin id="112" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="write_assign/1 "/>
</bind>
</comp>

<comp id="114" class="1004" name="length_assign_fu_114">
<pin_list>
<pin id="115" dir="0" index="0" bw="1" slack="0"/>
<pin id="116" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="length_assign/1 "/>
</bind>
</comp>

<comp id="118" class="1004" name="iterations_assign_fu_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="1" slack="0"/>
<pin id="120" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="iterations_assign/1 "/>
</bind>
</comp>

<comp id="122" class="1004" name="enabled_assign_fu_122">
<pin_list>
<pin id="123" dir="0" index="0" bw="1" slack="0"/>
<pin id="124" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="enabled_assign/1 "/>
</bind>
</comp>

<comp id="126" class="1004" name="enabled_read_read_fu_126">
<pin_list>
<pin id="127" dir="0" index="0" bw="1" slack="0"/>
<pin id="128" dir="0" index="1" bw="1" slack="0"/>
<pin id="129" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="enabled_read/1 "/>
</bind>
</comp>

<comp id="132" class="1004" name="write_read_read_fu_132">
<pin_list>
<pin id="133" dir="0" index="0" bw="1" slack="0"/>
<pin id="134" dir="0" index="1" bw="1" slack="0"/>
<pin id="135" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="write_read/1 "/>
</bind>
</comp>

<comp id="138" class="1004" name="iterations_read_read_fu_138">
<pin_list>
<pin id="139" dir="0" index="0" bw="32" slack="0"/>
<pin id="140" dir="0" index="1" bw="32" slack="0"/>
<pin id="141" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="iterations_read/2 "/>
</bind>
</comp>

<comp id="144" class="1004" name="length_read_read_fu_144">
<pin_list>
<pin id="145" dir="0" index="0" bw="32" slack="0"/>
<pin id="146" dir="0" index="1" bw="32" slack="0"/>
<pin id="147" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="length_read/2 "/>
</bind>
</comp>

<comp id="150" class="1004" name="startAddress_read_read_fu_150">
<pin_list>
<pin id="151" dir="0" index="0" bw="32" slack="0"/>
<pin id="152" dir="0" index="1" bw="32" slack="0"/>
<pin id="153" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="startAddress_read/2 "/>
</bind>
</comp>

<comp id="156" class="1004" name="grp_readreq_fu_156">
<pin_list>
<pin id="157" dir="0" index="0" bw="1" slack="0"/>
<pin id="158" dir="0" index="1" bw="32" slack="0"/>
<pin id="159" dir="0" index="2" bw="32" slack="0"/>
<pin id="160" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) readreq(1154) writereq(1155) writeresp(1158) " fcode="readreq"/>
<opset="AXI_DMA_SLAVE_load_req/2 AXI_DMA_SLAVE_addr_3_req6/4 stg_87/4 AXI_DMA_SLAVE_addr_3_resp7/4 AXI_DMA_SLAVE_load_1_req/5 AXI_DMA_SLAVE_addr_3_req/7 stg_97/7 AXI_DMA_SLAVE_addr_3_resp/7 AXI_DMA_SLAVE_addr_4_req/8 stg_103/8 AXI_DMA_SLAVE_addr_4_resp/8 AXI_DMA_SLAVE_addr_5_req/9 stg_109/9 AXI_DMA_SLAVE_addr_5_resp/9 AXI_DMA_SLAVE_req12/13 stg_135/13 AXI_DMA_SLAVE_resp13/13 AXI_DMA_SLAVE_load_2_req/15 AXI_DMA_SLAVE_load_3_req/16 AXI_DMA_SLAVE_req10/17 stg_147/17 AXI_DMA_SLAVE_resp11/17 AXI_DMA_SLAVE_req8/20 stg_156/20 AXI_DMA_SLAVE_resp9/20 AXI_DMA_SLAVE_load_4_req/21 AXI_DMA_SLAVE_req/23 stg_166/23 AXI_DMA_SLAVE_resp/23 AXI_DMA_SLAVE_load_5_req/24 AXI_DMA_SLAVE_addr_1_req/24 stg_171/24 AXI_DMA_SLAVE_load_6_req/25 AXI_DMA_SLAVE_addr_1_resp/27 AXI_DMA_SLAVE_addr_2_req/28 stg_183/28 AXI_DMA_SLAVE_addr_2_resp/28 AXI_DMA_SLAVE_load_7_req/29 AXI_DMA_SLAVE_load_8_req/30 "/>
</bind>
</comp>

<comp id="163" class="1004" name="grp_write_fu_163">
<pin_list>
<pin id="164" dir="0" index="0" bw="0" slack="0"/>
<pin id="165" dir="0" index="1" bw="1" slack="0"/>
<pin id="166" dir="0" index="2" bw="1" slack="0"/>
<pin id="167" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="stg_81/2 stg_123/12 "/>
</bind>
</comp>

<comp id="171" class="1004" name="grp_read_fu_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="32" slack="0"/>
<pin id="173" dir="0" index="1" bw="32" slack="0"/>
<pin id="174" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="AXI_DMA_SLAVE_addr_3_read/3 AXI_DMA_SLAVE_addr_3_read_1/6 AXI_DMA_SLAVE_read/16 AXI_DMA_SLAVE_read_1/19 AXI_DMA_SLAVE_read_2/22 AXI_DMA_SLAVE_read_3/28 AXI_DMA_SLAVE_addr_read/29 AXI_DMA_SLAVE_read_4/30 AXI_DMA_SLAVE_addr_read_1/31 "/>
</bind>
</comp>

<comp id="179" class="1004" name="grp_read_fu_179">
<pin_list>
<pin id="180" dir="0" index="0" bw="1" slack="0"/>
<pin id="181" dir="0" index="1" bw="1" slack="0"/>
<pin id="182" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="local_V/10 local_V_1/11 "/>
</bind>
</comp>

<comp id="185" class="1004" name="grp_write_fu_185">
<pin_list>
<pin id="186" dir="0" index="0" bw="0" slack="0"/>
<pin id="187" dir="0" index="1" bw="1" slack="0"/>
<pin id="188" dir="0" index="2" bw="1" slack="0"/>
<pin id="189" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="stg_118/11 stg_137/14 stg_202/32 "/>
</bind>
</comp>

<comp id="199" class="1004" name="stg_172_write_fu_199">
<pin_list>
<pin id="200" dir="0" index="0" bw="0" slack="0"/>
<pin id="201" dir="0" index="1" bw="32" slack="0"/>
<pin id="202" dir="0" index="2" bw="32" slack="9"/>
<pin id="203" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="stg_172/24 "/>
</bind>
</comp>

<comp id="206" class="1004" name="grp_write_fu_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="0" slack="0"/>
<pin id="208" dir="0" index="1" bw="32" slack="0"/>
<pin id="209" dir="0" index="2" bw="32" slack="0"/>
<pin id="210" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="stg_179/28 stg_191/30 "/>
</bind>
</comp>

<comp id="214" class="1004" name="grp_write_fu_214">
<pin_list>
<pin id="215" dir="0" index="0" bw="0" slack="0"/>
<pin id="216" dir="0" index="1" bw="32" slack="0"/>
<pin id="217" dir="0" index="2" bw="32" slack="0"/>
<pin id="218" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="stg_186/29 stg_195/31 "/>
</bind>
</comp>

<comp id="222" class="1004" name="grp_read_fu_222">
<pin_list>
<pin id="223" dir="0" index="0" bw="1" slack="0"/>
<pin id="224" dir="0" index="1" bw="1" slack="0"/>
<pin id="225" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="local_V_2/31 local_V_3/32 "/>
</bind>
</comp>

<comp id="228" class="1005" name="p_Val2_2_reg_228">
<pin_list>
<pin id="229" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="230" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="p_Val2_2 (phireg) "/>
</bind>
</comp>

<comp id="231" class="1004" name="p_Val2_2_phi_fu_231">
<pin_list>
<pin id="232" dir="0" index="0" bw="1" slack="1"/>
<pin id="233" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="234" dir="0" index="2" bw="1" slack="0"/>
<pin id="235" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="236" dir="1" index="4" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="p_Val2_2/11 "/>
</bind>
</comp>

<comp id="237" class="1005" name="i_reg_237">
<pin_list>
<pin id="238" dir="0" index="0" bw="32" slack="1"/>
<pin id="239" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="i (phireg) "/>
</bind>
</comp>

<comp id="241" class="1004" name="i_phi_fu_241">
<pin_list>
<pin id="242" dir="0" index="0" bw="1" slack="1"/>
<pin id="243" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="244" dir="0" index="2" bw="32" slack="0"/>
<pin id="245" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="246" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i/13 "/>
</bind>
</comp>

<comp id="248" class="1005" name="localAddress1_reg_248">
<pin_list>
<pin id="249" dir="0" index="0" bw="32" slack="9"/>
<pin id="250" dir="1" index="1" bw="32" slack="9"/>
</pin_list>
<bind>
<opset="localAddress1 (phireg) "/>
</bind>
</comp>

<comp id="253" class="1004" name="localAddress1_phi_fu_253">
<pin_list>
<pin id="254" dir="0" index="0" bw="32" slack="1"/>
<pin id="255" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="256" dir="0" index="2" bw="32" slack="1"/>
<pin id="257" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="258" dir="1" index="4" bw="32" slack="9"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="localAddress1/13 "/>
</bind>
</comp>

<comp id="260" class="1005" name="p_Val2_s_reg_260">
<pin_list>
<pin id="261" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="262" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="p_Val2_s (phireg) "/>
</bind>
</comp>

<comp id="263" class="1004" name="p_Val2_s_phi_fu_263">
<pin_list>
<pin id="264" dir="0" index="0" bw="1" slack="1"/>
<pin id="265" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="266" dir="0" index="2" bw="1" slack="0"/>
<pin id="267" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="268" dir="1" index="4" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="p_Val2_s/32 "/>
</bind>
</comp>

<comp id="270" class="1004" name="grp_fu_270">
<pin_list>
<pin id="271" dir="0" index="0" bw="31" slack="0"/>
<pin id="272" dir="0" index="1" bw="32" slack="0"/>
<pin id="273" dir="0" index="2" bw="1" slack="0"/>
<pin id="274" dir="0" index="3" bw="6" slack="0"/>
<pin id="275" dir="1" index="4" bw="31" slack="1"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_3/3 tmp_9/19 "/>
</bind>
</comp>

<comp id="280" class="1004" name="grp_fu_280">
<pin_list>
<pin id="281" dir="0" index="0" bw="19" slack="0"/>
<pin id="282" dir="0" index="1" bw="32" slack="0"/>
<pin id="283" dir="0" index="2" bw="5" slack="0"/>
<pin id="284" dir="0" index="3" bw="6" slack="0"/>
<pin id="285" dir="1" index="4" bw="19" slack="1"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_7/6 tmp_s/22 "/>
</bind>
</comp>

<comp id="290" class="1004" name="grp_load_fu_290">
<pin_list>
<pin id="291" dir="0" index="0" bw="32" slack="2"/>
<pin id="292" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="startAddress_assign_load/8 localAddress/12 "/>
</bind>
</comp>

<comp id="294" class="1004" name="grp_load_fu_294">
<pin_list>
<pin id="295" dir="0" index="0" bw="32" slack="8"/>
<pin id="296" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="length_assign_load/9 length_assign_load_1/28 "/>
</bind>
</comp>

<comp id="298" class="1005" name="reg_298">
<pin_list>
<pin id="299" dir="0" index="0" bw="31" slack="1"/>
<pin id="300" dir="1" index="1" bw="31" slack="1"/>
</pin_list>
<bind>
<opset="tmp_3 tmp_9 "/>
</bind>
</comp>

<comp id="302" class="1005" name="reg_302">
<pin_list>
<pin id="303" dir="0" index="0" bw="19" slack="1"/>
<pin id="304" dir="1" index="1" bw="19" slack="1"/>
</pin_list>
<bind>
<opset="tmp_7 tmp_s "/>
</bind>
</comp>

<comp id="306" class="1004" name="stg_40_store_fu_306">
<pin_list>
<pin id="307" dir="0" index="0" bw="1" slack="0"/>
<pin id="308" dir="0" index="1" bw="1" slack="0"/>
<pin id="309" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="stg_40/1 "/>
</bind>
</comp>

<comp id="311" class="1004" name="stg_41_store_fu_311">
<pin_list>
<pin id="312" dir="0" index="0" bw="1" slack="0"/>
<pin id="313" dir="0" index="1" bw="1" slack="0"/>
<pin id="314" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="stg_41/1 "/>
</bind>
</comp>

<comp id="316" class="1004" name="stg_59_store_fu_316">
<pin_list>
<pin id="317" dir="0" index="0" bw="32" slack="0"/>
<pin id="318" dir="0" index="1" bw="32" slack="1"/>
<pin id="319" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="stg_59/2 "/>
</bind>
</comp>

<comp id="321" class="1004" name="stg_60_store_fu_321">
<pin_list>
<pin id="322" dir="0" index="0" bw="32" slack="0"/>
<pin id="323" dir="0" index="1" bw="32" slack="1"/>
<pin id="324" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="stg_60/2 "/>
</bind>
</comp>

<comp id="326" class="1004" name="stg_61_store_fu_326">
<pin_list>
<pin id="327" dir="0" index="0" bw="32" slack="0"/>
<pin id="328" dir="0" index="1" bw="32" slack="1"/>
<pin id="329" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="stg_61/2 "/>
</bind>
</comp>

<comp id="331" class="1004" name="localEnabled_load_fu_331">
<pin_list>
<pin id="332" dir="0" index="0" bw="1" slack="1"/>
<pin id="333" dir="1" index="1" bw="1" slack="9"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="localEnabled/2 "/>
</bind>
</comp>

<comp id="334" class="1004" name="write_assign_load_load_fu_334">
<pin_list>
<pin id="335" dir="0" index="0" bw="1" slack="1"/>
<pin id="336" dir="1" index="1" bw="1" slack="9"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="write_assign_load/2 "/>
</bind>
</comp>

<comp id="337" class="1004" name="AXI_DMA_SLAVE_addr_3_fu_337">
<pin_list>
<pin id="338" dir="0" index="0" bw="32" slack="0"/>
<pin id="339" dir="0" index="1" bw="5" slack="0"/>
<pin id="340" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="AXI_DMA_SLAVE_addr_3/2 "/>
</bind>
</comp>

<comp id="344" class="1004" name="tmp_fu_344">
<pin_list>
<pin id="345" dir="0" index="0" bw="32" slack="0"/>
<pin id="346" dir="0" index="1" bw="31" slack="1"/>
<pin id="347" dir="0" index="2" bw="1" slack="0"/>
<pin id="348" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="tmp/4 "/>
</bind>
</comp>

<comp id="353" class="1004" name="tmp_4_fu_353">
<pin_list>
<pin id="354" dir="0" index="0" bw="32" slack="0"/>
<pin id="355" dir="1" index="1" bw="12" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_4/6 "/>
</bind>
</comp>

<comp id="357" class="1004" name="tmp_1_fu_357">
<pin_list>
<pin id="358" dir="0" index="0" bw="32" slack="0"/>
<pin id="359" dir="0" index="1" bw="19" slack="1"/>
<pin id="360" dir="0" index="2" bw="1" slack="0"/>
<pin id="361" dir="0" index="3" bw="12" slack="1"/>
<pin id="362" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="tmp_1/7 "/>
</bind>
</comp>

<comp id="367" class="1004" name="AXI_DMA_SLAVE_addr_4_fu_367">
<pin_list>
<pin id="368" dir="0" index="0" bw="32" slack="0"/>
<pin id="369" dir="0" index="1" bw="6" slack="0"/>
<pin id="370" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="AXI_DMA_SLAVE_addr_4/8 "/>
</bind>
</comp>

<comp id="374" class="1004" name="AXI_DMA_SLAVE_addr_5_fu_374">
<pin_list>
<pin id="375" dir="0" index="0" bw="32" slack="0"/>
<pin id="376" dir="0" index="1" bw="6" slack="0"/>
<pin id="377" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="AXI_DMA_SLAVE_addr_5/9 "/>
</bind>
</comp>

<comp id="381" class="1004" name="AXI_DMA_SLAVE_addr_fu_381">
<pin_list>
<pin id="382" dir="0" index="0" bw="32" slack="0"/>
<pin id="383" dir="0" index="1" bw="1" slack="0"/>
<pin id="384" dir="1" index="2" bw="32" slack="11"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="AXI_DMA_SLAVE_addr/12 "/>
</bind>
</comp>

<comp id="387" class="1004" name="AXI_DMA_SLAVE_addr_1_fu_387">
<pin_list>
<pin id="388" dir="0" index="0" bw="32" slack="0"/>
<pin id="389" dir="0" index="1" bw="4" slack="0"/>
<pin id="390" dir="1" index="2" bw="32" slack="10"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="AXI_DMA_SLAVE_addr_1/12 "/>
</bind>
</comp>

<comp id="393" class="1004" name="AXI_DMA_SLAVE_addr_2_fu_393">
<pin_list>
<pin id="394" dir="0" index="0" bw="32" slack="0"/>
<pin id="395" dir="0" index="1" bw="5" slack="0"/>
<pin id="396" dir="1" index="2" bw="32" slack="14"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="AXI_DMA_SLAVE_addr_2/12 "/>
</bind>
</comp>

<comp id="399" class="1004" name="iterations_assign_load_load_fu_399">
<pin_list>
<pin id="400" dir="0" index="0" bw="32" slack="3"/>
<pin id="401" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="iterations_assign_load/13 "/>
</bind>
</comp>

<comp id="402" class="1004" name="tmp_2_fu_402">
<pin_list>
<pin id="403" dir="0" index="0" bw="32" slack="0"/>
<pin id="404" dir="0" index="1" bw="32" slack="0"/>
<pin id="405" dir="1" index="2" bw="1" slack="7"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_2/13 "/>
</bind>
</comp>

<comp id="408" class="1004" name="i_1_fu_408">
<pin_list>
<pin id="409" dir="0" index="0" bw="32" slack="0"/>
<pin id="410" dir="0" index="1" bw="1" slack="0"/>
<pin id="411" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i_1/13 "/>
</bind>
</comp>

<comp id="414" class="1004" name="tmp_8_fu_414">
<pin_list>
<pin id="415" dir="0" index="0" bw="1" slack="0"/>
<pin id="416" dir="0" index="1" bw="32" slack="0"/>
<pin id="417" dir="0" index="2" bw="3" slack="0"/>
<pin id="418" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_8/16 "/>
</bind>
</comp>

<comp id="422" class="1004" name="tmp_5_fu_422">
<pin_list>
<pin id="423" dir="0" index="0" bw="32" slack="0"/>
<pin id="424" dir="0" index="1" bw="31" slack="1"/>
<pin id="425" dir="0" index="2" bw="1" slack="0"/>
<pin id="426" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="tmp_5/20 "/>
</bind>
</comp>

<comp id="431" class="1004" name="tmp_10_fu_431">
<pin_list>
<pin id="432" dir="0" index="0" bw="32" slack="0"/>
<pin id="433" dir="1" index="1" bw="12" slack="1"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_10/22 "/>
</bind>
</comp>

<comp id="435" class="1004" name="tmp_6_fu_435">
<pin_list>
<pin id="436" dir="0" index="0" bw="32" slack="0"/>
<pin id="437" dir="0" index="1" bw="19" slack="1"/>
<pin id="438" dir="0" index="2" bw="1" slack="0"/>
<pin id="439" dir="0" index="3" bw="12" slack="1"/>
<pin id="440" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="tmp_6/23 "/>
</bind>
</comp>

<comp id="445" class="1004" name="localAddress_1_fu_445">
<pin_list>
<pin id="446" dir="0" index="0" bw="32" slack="9"/>
<pin id="447" dir="0" index="1" bw="4" slack="0"/>
<pin id="448" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="localAddress_1/24 "/>
</bind>
</comp>

<comp id="451" class="1005" name="startAddress_assign_reg_451">
<pin_list>
<pin id="452" dir="0" index="0" bw="32" slack="1"/>
<pin id="453" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="startAddress_assign "/>
</bind>
</comp>

<comp id="457" class="1005" name="write_assign_reg_457">
<pin_list>
<pin id="458" dir="0" index="0" bw="1" slack="0"/>
<pin id="459" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opset="write_assign "/>
</bind>
</comp>

<comp id="463" class="1005" name="length_assign_reg_463">
<pin_list>
<pin id="464" dir="0" index="0" bw="32" slack="1"/>
<pin id="465" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="length_assign "/>
</bind>
</comp>

<comp id="469" class="1005" name="iterations_assign_reg_469">
<pin_list>
<pin id="470" dir="0" index="0" bw="32" slack="1"/>
<pin id="471" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="iterations_assign "/>
</bind>
</comp>

<comp id="475" class="1005" name="enabled_assign_reg_475">
<pin_list>
<pin id="476" dir="0" index="0" bw="1" slack="0"/>
<pin id="477" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opset="enabled_assign "/>
</bind>
</comp>

<comp id="481" class="1005" name="localEnabled_reg_481">
<pin_list>
<pin id="482" dir="0" index="0" bw="1" slack="9"/>
<pin id="483" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="localEnabled "/>
</bind>
</comp>

<comp id="485" class="1005" name="write_assign_load_reg_485">
<pin_list>
<pin id="486" dir="0" index="0" bw="1" slack="9"/>
<pin id="487" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="write_assign_load "/>
</bind>
</comp>

<comp id="489" class="1005" name="AXI_DMA_SLAVE_addr_3_reg_489">
<pin_list>
<pin id="490" dir="0" index="0" bw="32" slack="1"/>
<pin id="491" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="AXI_DMA_SLAVE_addr_3 "/>
</bind>
</comp>

<comp id="495" class="1005" name="tmp_4_reg_495">
<pin_list>
<pin id="496" dir="0" index="0" bw="12" slack="1"/>
<pin id="497" dir="1" index="1" bw="12" slack="1"/>
</pin_list>
<bind>
<opset="tmp_4 "/>
</bind>
</comp>

<comp id="500" class="1005" name="AXI_DMA_SLAVE_addr_4_reg_500">
<pin_list>
<pin id="501" dir="0" index="0" bw="32" slack="1"/>
<pin id="502" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="AXI_DMA_SLAVE_addr_4 "/>
</bind>
</comp>

<comp id="505" class="1005" name="AXI_DMA_SLAVE_addr_5_reg_505">
<pin_list>
<pin id="506" dir="0" index="0" bw="32" slack="1"/>
<pin id="507" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="AXI_DMA_SLAVE_addr_5 "/>
</bind>
</comp>

<comp id="510" class="1005" name="local_V_reg_510">
<pin_list>
<pin id="511" dir="0" index="0" bw="1" slack="1"/>
<pin id="512" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="local_V "/>
</bind>
</comp>

<comp id="515" class="1005" name="local_V_1_reg_515">
<pin_list>
<pin id="516" dir="0" index="0" bw="1" slack="0"/>
<pin id="517" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opset="local_V_1 "/>
</bind>
</comp>

<comp id="520" class="1005" name="localAddress_reg_520">
<pin_list>
<pin id="521" dir="0" index="0" bw="32" slack="1"/>
<pin id="522" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="localAddress "/>
</bind>
</comp>

<comp id="525" class="1005" name="AXI_DMA_SLAVE_addr_reg_525">
<pin_list>
<pin id="526" dir="0" index="0" bw="32" slack="11"/>
<pin id="527" dir="1" index="1" bw="32" slack="11"/>
</pin_list>
<bind>
<opset="AXI_DMA_SLAVE_addr "/>
</bind>
</comp>

<comp id="531" class="1005" name="AXI_DMA_SLAVE_addr_1_reg_531">
<pin_list>
<pin id="532" dir="0" index="0" bw="32" slack="10"/>
<pin id="533" dir="1" index="1" bw="32" slack="10"/>
</pin_list>
<bind>
<opset="AXI_DMA_SLAVE_addr_1 "/>
</bind>
</comp>

<comp id="536" class="1005" name="AXI_DMA_SLAVE_addr_2_reg_536">
<pin_list>
<pin id="537" dir="0" index="0" bw="32" slack="14"/>
<pin id="538" dir="1" index="1" bw="32" slack="14"/>
</pin_list>
<bind>
<opset="AXI_DMA_SLAVE_addr_2 "/>
</bind>
</comp>

<comp id="541" class="1005" name="tmp_2_reg_541">
<pin_list>
<pin id="542" dir="0" index="0" bw="1" slack="7"/>
<pin id="543" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_2 "/>
</bind>
</comp>

<comp id="545" class="1005" name="i_1_reg_545">
<pin_list>
<pin id="546" dir="0" index="0" bw="32" slack="0"/>
<pin id="547" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="i_1 "/>
</bind>
</comp>

<comp id="553" class="1005" name="tmp_10_reg_553">
<pin_list>
<pin id="554" dir="0" index="0" bw="12" slack="1"/>
<pin id="555" dir="1" index="1" bw="12" slack="1"/>
</pin_list>
<bind>
<opset="tmp_10 "/>
</bind>
</comp>

<comp id="558" class="1005" name="localAddress_1_reg_558">
<pin_list>
<pin id="559" dir="0" index="0" bw="32" slack="1"/>
<pin id="560" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="localAddress_1 "/>
</bind>
</comp>

<comp id="563" class="1005" name="local_V_2_reg_563">
<pin_list>
<pin id="564" dir="0" index="0" bw="1" slack="1"/>
<pin id="565" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="local_V_2 "/>
</bind>
</comp>

<comp id="568" class="1005" name="local_V_3_reg_568">
<pin_list>
<pin id="569" dir="0" index="0" bw="1" slack="0"/>
<pin id="570" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opset="local_V_3 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="109"><net_src comp="30" pin="0"/><net_sink comp="106" pin=0"/></net>

<net id="113"><net_src comp="30" pin="0"/><net_sink comp="110" pin=0"/></net>

<net id="117"><net_src comp="30" pin="0"/><net_sink comp="114" pin=0"/></net>

<net id="121"><net_src comp="30" pin="0"/><net_sink comp="118" pin=0"/></net>

<net id="125"><net_src comp="30" pin="0"/><net_sink comp="122" pin=0"/></net>

<net id="130"><net_src comp="26" pin="0"/><net_sink comp="126" pin=0"/></net>

<net id="131"><net_src comp="10" pin="0"/><net_sink comp="126" pin=1"/></net>

<net id="136"><net_src comp="28" pin="0"/><net_sink comp="132" pin=0"/></net>

<net id="137"><net_src comp="4" pin="0"/><net_sink comp="132" pin=1"/></net>

<net id="142"><net_src comp="38" pin="0"/><net_sink comp="138" pin=0"/></net>

<net id="143"><net_src comp="8" pin="0"/><net_sink comp="138" pin=1"/></net>

<net id="148"><net_src comp="38" pin="0"/><net_sink comp="144" pin=0"/></net>

<net id="149"><net_src comp="6" pin="0"/><net_sink comp="144" pin=1"/></net>

<net id="154"><net_src comp="38" pin="0"/><net_sink comp="150" pin=0"/></net>

<net id="155"><net_src comp="2" pin="0"/><net_sink comp="150" pin=1"/></net>

<net id="161"><net_src comp="58" pin="0"/><net_sink comp="156" pin=0"/></net>

<net id="162"><net_src comp="60" pin="0"/><net_sink comp="156" pin=2"/></net>

<net id="168"><net_src comp="62" pin="0"/><net_sink comp="163" pin=0"/></net>

<net id="169"><net_src comp="12" pin="0"/><net_sink comp="163" pin=1"/></net>

<net id="170"><net_src comp="64" pin="0"/><net_sink comp="163" pin=2"/></net>

<net id="175"><net_src comp="66" pin="0"/><net_sink comp="171" pin=0"/></net>

<net id="176"><net_src comp="74" pin="0"/><net_sink comp="156" pin=0"/></net>

<net id="177"><net_src comp="76" pin="0"/><net_sink comp="156" pin=0"/></net>

<net id="178"><net_src comp="78" pin="0"/><net_sink comp="156" pin=0"/></net>

<net id="183"><net_src comp="90" pin="0"/><net_sink comp="179" pin=0"/></net>

<net id="184"><net_src comp="20" pin="0"/><net_sink comp="179" pin=1"/></net>

<net id="190"><net_src comp="62" pin="0"/><net_sink comp="185" pin=0"/></net>

<net id="191"><net_src comp="24" pin="0"/><net_sink comp="185" pin=1"/></net>

<net id="192"><net_src comp="64" pin="0"/><net_sink comp="185" pin=2"/></net>

<net id="193"><net_src comp="92" pin="0"/><net_sink comp="163" pin=2"/></net>

<net id="194"><net_src comp="0" pin="0"/><net_sink comp="156" pin=1"/></net>

<net id="195"><net_src comp="98" pin="0"/><net_sink comp="156" pin=2"/></net>

<net id="196"><net_src comp="92" pin="0"/><net_sink comp="185" pin=2"/></net>

<net id="197"><net_src comp="0" pin="0"/><net_sink comp="171" pin=1"/></net>

<net id="198"><net_src comp="44" pin="0"/><net_sink comp="156" pin=2"/></net>

<net id="204"><net_src comp="104" pin="0"/><net_sink comp="199" pin=0"/></net>

<net id="205"><net_src comp="18" pin="0"/><net_sink comp="199" pin=1"/></net>

<net id="211"><net_src comp="104" pin="0"/><net_sink comp="206" pin=0"/></net>

<net id="212"><net_src comp="14" pin="0"/><net_sink comp="206" pin=1"/></net>

<net id="213"><net_src comp="171" pin="2"/><net_sink comp="206" pin=2"/></net>

<net id="219"><net_src comp="104" pin="0"/><net_sink comp="214" pin=0"/></net>

<net id="220"><net_src comp="16" pin="0"/><net_sink comp="214" pin=1"/></net>

<net id="221"><net_src comp="171" pin="2"/><net_sink comp="214" pin=2"/></net>

<net id="226"><net_src comp="90" pin="0"/><net_sink comp="222" pin=0"/></net>

<net id="227"><net_src comp="22" pin="0"/><net_sink comp="222" pin=1"/></net>

<net id="240"><net_src comp="44" pin="0"/><net_sink comp="237" pin=0"/></net>

<net id="247"><net_src comp="237" pin="1"/><net_sink comp="241" pin=0"/></net>

<net id="251"><net_src comp="248" pin="1"/><net_sink comp="156" pin=2"/></net>

<net id="252"><net_src comp="248" pin="1"/><net_sink comp="199" pin=2"/></net>

<net id="259"><net_src comp="253" pin="4"/><net_sink comp="248" pin=0"/></net>

<net id="276"><net_src comp="68" pin="0"/><net_sink comp="270" pin=0"/></net>

<net id="277"><net_src comp="171" pin="2"/><net_sink comp="270" pin=1"/></net>

<net id="278"><net_src comp="60" pin="0"/><net_sink comp="270" pin=2"/></net>

<net id="279"><net_src comp="70" pin="0"/><net_sink comp="270" pin=3"/></net>

<net id="286"><net_src comp="80" pin="0"/><net_sink comp="280" pin=0"/></net>

<net id="287"><net_src comp="171" pin="2"/><net_sink comp="280" pin=1"/></net>

<net id="288"><net_src comp="82" pin="0"/><net_sink comp="280" pin=2"/></net>

<net id="289"><net_src comp="70" pin="0"/><net_sink comp="280" pin=3"/></net>

<net id="293"><net_src comp="290" pin="1"/><net_sink comp="156" pin=2"/></net>

<net id="297"><net_src comp="294" pin="1"/><net_sink comp="156" pin=2"/></net>

<net id="301"><net_src comp="270" pin="4"/><net_sink comp="298" pin=0"/></net>

<net id="305"><net_src comp="280" pin="4"/><net_sink comp="302" pin=0"/></net>

<net id="310"><net_src comp="132" pin="2"/><net_sink comp="306" pin=0"/></net>

<net id="315"><net_src comp="126" pin="2"/><net_sink comp="311" pin=0"/></net>

<net id="320"><net_src comp="150" pin="2"/><net_sink comp="316" pin=0"/></net>

<net id="325"><net_src comp="144" pin="2"/><net_sink comp="321" pin=0"/></net>

<net id="330"><net_src comp="138" pin="2"/><net_sink comp="326" pin=0"/></net>

<net id="341"><net_src comp="0" pin="0"/><net_sink comp="337" pin=0"/></net>

<net id="342"><net_src comp="56" pin="0"/><net_sink comp="337" pin=1"/></net>

<net id="343"><net_src comp="337" pin="2"/><net_sink comp="156" pin=1"/></net>

<net id="349"><net_src comp="72" pin="0"/><net_sink comp="344" pin=0"/></net>

<net id="350"><net_src comp="298" pin="1"/><net_sink comp="344" pin=1"/></net>

<net id="351"><net_src comp="64" pin="0"/><net_sink comp="344" pin=2"/></net>

<net id="352"><net_src comp="344" pin="3"/><net_sink comp="156" pin=2"/></net>

<net id="356"><net_src comp="171" pin="2"/><net_sink comp="353" pin=0"/></net>

<net id="363"><net_src comp="84" pin="0"/><net_sink comp="357" pin=0"/></net>

<net id="364"><net_src comp="302" pin="1"/><net_sink comp="357" pin=1"/></net>

<net id="365"><net_src comp="64" pin="0"/><net_sink comp="357" pin=2"/></net>

<net id="366"><net_src comp="357" pin="4"/><net_sink comp="156" pin=2"/></net>

<net id="371"><net_src comp="0" pin="0"/><net_sink comp="367" pin=0"/></net>

<net id="372"><net_src comp="86" pin="0"/><net_sink comp="367" pin=1"/></net>

<net id="373"><net_src comp="367" pin="2"/><net_sink comp="156" pin=1"/></net>

<net id="378"><net_src comp="0" pin="0"/><net_sink comp="374" pin=0"/></net>

<net id="379"><net_src comp="88" pin="0"/><net_sink comp="374" pin=1"/></net>

<net id="380"><net_src comp="374" pin="2"/><net_sink comp="156" pin=1"/></net>

<net id="385"><net_src comp="0" pin="0"/><net_sink comp="381" pin=0"/></net>

<net id="386"><net_src comp="30" pin="0"/><net_sink comp="381" pin=1"/></net>

<net id="391"><net_src comp="0" pin="0"/><net_sink comp="387" pin=0"/></net>

<net id="392"><net_src comp="94" pin="0"/><net_sink comp="387" pin=1"/></net>

<net id="397"><net_src comp="0" pin="0"/><net_sink comp="393" pin=0"/></net>

<net id="398"><net_src comp="96" pin="0"/><net_sink comp="393" pin=1"/></net>

<net id="406"><net_src comp="241" pin="4"/><net_sink comp="402" pin=0"/></net>

<net id="407"><net_src comp="399" pin="1"/><net_sink comp="402" pin=1"/></net>

<net id="412"><net_src comp="241" pin="4"/><net_sink comp="408" pin=0"/></net>

<net id="413"><net_src comp="60" pin="0"/><net_sink comp="408" pin=1"/></net>

<net id="419"><net_src comp="100" pin="0"/><net_sink comp="414" pin=0"/></net>

<net id="420"><net_src comp="171" pin="2"/><net_sink comp="414" pin=1"/></net>

<net id="421"><net_src comp="102" pin="0"/><net_sink comp="414" pin=2"/></net>

<net id="427"><net_src comp="72" pin="0"/><net_sink comp="422" pin=0"/></net>

<net id="428"><net_src comp="298" pin="1"/><net_sink comp="422" pin=1"/></net>

<net id="429"><net_src comp="64" pin="0"/><net_sink comp="422" pin=2"/></net>

<net id="430"><net_src comp="422" pin="3"/><net_sink comp="156" pin=2"/></net>

<net id="434"><net_src comp="171" pin="2"/><net_sink comp="431" pin=0"/></net>

<net id="441"><net_src comp="84" pin="0"/><net_sink comp="435" pin=0"/></net>

<net id="442"><net_src comp="302" pin="1"/><net_sink comp="435" pin=1"/></net>

<net id="443"><net_src comp="64" pin="0"/><net_sink comp="435" pin=2"/></net>

<net id="444"><net_src comp="435" pin="4"/><net_sink comp="156" pin=2"/></net>

<net id="449"><net_src comp="248" pin="1"/><net_sink comp="445" pin=0"/></net>

<net id="450"><net_src comp="98" pin="0"/><net_sink comp="445" pin=1"/></net>

<net id="454"><net_src comp="106" pin="1"/><net_sink comp="451" pin=0"/></net>

<net id="455"><net_src comp="451" pin="1"/><net_sink comp="316" pin=1"/></net>

<net id="456"><net_src comp="451" pin="1"/><net_sink comp="290" pin=0"/></net>

<net id="460"><net_src comp="110" pin="1"/><net_sink comp="457" pin=0"/></net>

<net id="461"><net_src comp="457" pin="1"/><net_sink comp="306" pin=1"/></net>

<net id="462"><net_src comp="457" pin="1"/><net_sink comp="334" pin=0"/></net>

<net id="466"><net_src comp="114" pin="1"/><net_sink comp="463" pin=0"/></net>

<net id="467"><net_src comp="463" pin="1"/><net_sink comp="321" pin=1"/></net>

<net id="468"><net_src comp="463" pin="1"/><net_sink comp="294" pin=0"/></net>

<net id="472"><net_src comp="118" pin="1"/><net_sink comp="469" pin=0"/></net>

<net id="473"><net_src comp="469" pin="1"/><net_sink comp="326" pin=1"/></net>

<net id="474"><net_src comp="469" pin="1"/><net_sink comp="399" pin=0"/></net>

<net id="478"><net_src comp="122" pin="1"/><net_sink comp="475" pin=0"/></net>

<net id="479"><net_src comp="475" pin="1"/><net_sink comp="311" pin=1"/></net>

<net id="480"><net_src comp="475" pin="1"/><net_sink comp="331" pin=0"/></net>

<net id="484"><net_src comp="331" pin="1"/><net_sink comp="481" pin=0"/></net>

<net id="488"><net_src comp="334" pin="1"/><net_sink comp="485" pin=0"/></net>

<net id="492"><net_src comp="337" pin="2"/><net_sink comp="489" pin=0"/></net>

<net id="493"><net_src comp="489" pin="1"/><net_sink comp="156" pin=1"/></net>

<net id="494"><net_src comp="489" pin="1"/><net_sink comp="171" pin=1"/></net>

<net id="498"><net_src comp="353" pin="1"/><net_sink comp="495" pin=0"/></net>

<net id="499"><net_src comp="495" pin="1"/><net_sink comp="357" pin=3"/></net>

<net id="503"><net_src comp="367" pin="2"/><net_sink comp="500" pin=0"/></net>

<net id="504"><net_src comp="500" pin="1"/><net_sink comp="156" pin=1"/></net>

<net id="508"><net_src comp="374" pin="2"/><net_sink comp="505" pin=0"/></net>

<net id="509"><net_src comp="505" pin="1"/><net_sink comp="156" pin=1"/></net>

<net id="513"><net_src comp="179" pin="2"/><net_sink comp="510" pin=0"/></net>

<net id="514"><net_src comp="510" pin="1"/><net_sink comp="231" pin=0"/></net>

<net id="518"><net_src comp="179" pin="2"/><net_sink comp="515" pin=0"/></net>

<net id="519"><net_src comp="515" pin="1"/><net_sink comp="231" pin=2"/></net>

<net id="523"><net_src comp="290" pin="1"/><net_sink comp="520" pin=0"/></net>

<net id="524"><net_src comp="520" pin="1"/><net_sink comp="253" pin=0"/></net>

<net id="528"><net_src comp="381" pin="2"/><net_sink comp="525" pin=0"/></net>

<net id="529"><net_src comp="525" pin="1"/><net_sink comp="156" pin=1"/></net>

<net id="530"><net_src comp="525" pin="1"/><net_sink comp="171" pin=1"/></net>

<net id="534"><net_src comp="387" pin="2"/><net_sink comp="531" pin=0"/></net>

<net id="535"><net_src comp="531" pin="1"/><net_sink comp="156" pin=1"/></net>

<net id="539"><net_src comp="393" pin="2"/><net_sink comp="536" pin=0"/></net>

<net id="540"><net_src comp="536" pin="1"/><net_sink comp="156" pin=1"/></net>

<net id="544"><net_src comp="402" pin="2"/><net_sink comp="541" pin=0"/></net>

<net id="548"><net_src comp="408" pin="2"/><net_sink comp="545" pin=0"/></net>

<net id="549"><net_src comp="545" pin="1"/><net_sink comp="241" pin=2"/></net>

<net id="556"><net_src comp="431" pin="1"/><net_sink comp="553" pin=0"/></net>

<net id="557"><net_src comp="553" pin="1"/><net_sink comp="435" pin=3"/></net>

<net id="561"><net_src comp="445" pin="2"/><net_sink comp="558" pin=0"/></net>

<net id="562"><net_src comp="558" pin="1"/><net_sink comp="253" pin=2"/></net>

<net id="566"><net_src comp="222" pin="2"/><net_sink comp="563" pin=0"/></net>

<net id="567"><net_src comp="563" pin="1"/><net_sink comp="263" pin=0"/></net>

<net id="571"><net_src comp="222" pin="2"/><net_sink comp="568" pin=0"/></net>

<net id="572"><net_src comp="568" pin="1"/><net_sink comp="263" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: AXI_DMA_SLAVE | {4 7 8 9 13 17 20 23 24 28 }
	Port: reset_scanner | {2 12 }
	Port: dma_control | {28 30 }
	Port: dma_status | {29 31 }
	Port: dma_address | {24 }
	Port: controller_finished_V | {11 14 32 }
  - Chain level:
	State 1
		stg_40 : 1
		stg_41 : 1
	State 2
		stg_76 : 1
		stg_78 : 1
		AXI_DMA_SLAVE_load_req : 1
	State 3
	State 4
		stg_87 : 1
	State 5
	State 6
	State 7
		stg_97 : 1
	State 8
		AXI_DMA_SLAVE_addr_4_req : 1
		stg_103 : 1
		AXI_DMA_SLAVE_addr_4_resp : 1
	State 9
		AXI_DMA_SLAVE_addr_5_req : 1
		stg_109 : 1
		AXI_DMA_SLAVE_addr_5_resp : 1
	State 10
	State 11
		stg_115 : 1
	State 12
	State 13
		tmp_2 : 1
		i_1 : 1
		stg_133 : 2
	State 14
	State 15
	State 16
		stg_144 : 1
	State 17
	State 18
	State 19
	State 20
		stg_156 : 1
	State 21
	State 22
	State 23
		stg_166 : 1
	State 24
	State 25
	State 26
	State 27
	State 28
		stg_183 : 1
	State 29
	State 30
	State 31
	State 32
		stg_199 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-------------------------------|---------|---------|
| Operation|        Functional Unit        |    FF   |   LUT   |
|----------|-------------------------------|---------|---------|
|    add   |           i_1_fu_408          |    0    |    32   |
|          |     localAddress_1_fu_445     |    0    |    32   |
|----------|-------------------------------|---------|---------|
|   icmp   |          tmp_2_fu_402         |    0    |    40   |
|----------|-------------------------------|---------|---------|
|          |    enabled_read_read_fu_126   |    0    |    0    |
|          |     write_read_read_fu_132    |    0    |    0    |
|          |  iterations_read_read_fu_138  |    0    |    0    |
|   read   |    length_read_read_fu_144    |    0    |    0    |
|          | startAddress_read_read_fu_150 |    0    |    0    |
|          |        grp_read_fu_171        |    0    |    0    |
|          |        grp_read_fu_179        |    0    |    0    |
|          |        grp_read_fu_222        |    0    |    0    |
|----------|-------------------------------|---------|---------|
|  readreq |       grp_readreq_fu_156      |    0    |    0    |
|----------|-------------------------------|---------|---------|
|          |        grp_write_fu_163       |    0    |    0    |
|          |        grp_write_fu_185       |    0    |    0    |
|   write  |      stg_172_write_fu_199     |    0    |    0    |
|          |        grp_write_fu_206       |    0    |    0    |
|          |        grp_write_fu_214       |    0    |    0    |
|----------|-------------------------------|---------|---------|
|partselect|           grp_fu_270          |    0    |    0    |
|          |           grp_fu_280          |    0    |    0    |
|----------|-------------------------------|---------|---------|
|          |           tmp_fu_344          |    0    |    0    |
|bitconcatenate|          tmp_1_fu_357         |    0    |    0    |
|          |          tmp_5_fu_422         |    0    |    0    |
|          |          tmp_6_fu_435         |    0    |    0    |
|----------|-------------------------------|---------|---------|
|   trunc  |          tmp_4_fu_353         |    0    |    0    |
|          |         tmp_10_fu_431         |    0    |    0    |
|----------|-------------------------------|---------|---------|
| bitselect|          tmp_8_fu_414         |    0    |    0    |
|----------|-------------------------------|---------|---------|
|   Total  |                               |    0    |   104   |
|----------|-------------------------------|---------|---------|

Memories:
N/A

* Register list:
+----------------------------+--------+
|                            |   FF   |
+----------------------------+--------+
|AXI_DMA_SLAVE_addr_1_reg_531|   32   |
|AXI_DMA_SLAVE_addr_2_reg_536|   32   |
|AXI_DMA_SLAVE_addr_3_reg_489|   32   |
|AXI_DMA_SLAVE_addr_4_reg_500|   32   |
|AXI_DMA_SLAVE_addr_5_reg_505|   32   |
| AXI_DMA_SLAVE_addr_reg_525 |   32   |
|   enabled_assign_reg_475   |    1   |
|         i_1_reg_545        |   32   |
|          i_reg_237         |   32   |
|  iterations_assign_reg_469 |   32   |
|    length_assign_reg_463   |   32   |
|    localAddress1_reg_248   |   32   |
|   localAddress_1_reg_558   |   32   |
|    localAddress_reg_520    |   32   |
|    localEnabled_reg_481    |    1   |
|      local_V_1_reg_515     |    1   |
|      local_V_2_reg_563     |    1   |
|      local_V_3_reg_568     |    1   |
|       local_V_reg_510      |    1   |
|      p_Val2_2_reg_228      |    1   |
|      p_Val2_s_reg_260      |    1   |
|           reg_298          |   31   |
|           reg_302          |   19   |
| startAddress_assign_reg_451|   32   |
|       tmp_10_reg_553       |   12   |
|        tmp_2_reg_541       |    1   |
|        tmp_4_reg_495       |   12   |
|  write_assign_load_reg_485 |    1   |
|    write_assign_reg_457    |    1   |
+----------------------------+--------+
|            Total           |   533  |
+----------------------------+--------+

* Multiplexer (MUX) list: 
|--------------------|------|------|------|--------||---------||---------|
|        Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|--------------------|------|------|------|--------||---------||---------|
| grp_readreq_fu_156 |  p0  |   4  |   1  |    4   ||    1    |
| grp_readreq_fu_156 |  p1  |  10  |  32  |   320  ||    64   |
| grp_readreq_fu_156 |  p2  |  10  |  32  |   320  ||    64   |
|  grp_write_fu_163  |  p2  |   2  |   1  |    2   |
|   grp_read_fu_171  |  p1  |   3  |  32  |   96   ||    32   |
|  grp_write_fu_185  |  p2  |   2  |   1  |    2   |
|--------------------|------|------|------|--------||---------||---------|
|        Total       |      |      |      |   744  ||  9.7705 ||   161   |
|--------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   104  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    9   |    -   |   161  |
|  Register |    -   |   533  |    -   |
+-----------+--------+--------+--------+
|   Total   |    9   |   533  |   265  |
+-----------+--------+--------+--------+
